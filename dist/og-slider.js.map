{"version":3,"sources":["og-slider.es6.js"],"names":["Polymer","is","properties","start","type","Number","defaultValue","max","value","renderView","Boolean","errorMessage","String","ranges","Array","ready","length","items","listeners","notifyResize","$","slider","_changeSlider","e","detail","fire","index"],"mappings":"aAAA,CAAC,UAAW,CACVA,QAAQ,CAENC,GAAI,WAFE,CAINC,WAAY,CACV;;;;QAKAC,MAAO,CAAEC,KAAMC,MAAR,CAAgBC,aAAc,CAA9B,CANG,CAQV;;;;QAKAC,IAAK,CAAEH,KAAMC,MAAR,CAAgBG,MAAO,CAAvB,CAbK,CAeV;;;;QAKAC,WAAY,CAAEL,KAAMM,OAAR,CAAiBF,MAAO,KAAxB,CApBF,CAsBV;;;;QAKAG,aAAc,CAAEP,KAAMQ,MAAR,CAAgBJ,MAAO,+CAAvB,CA3BJ,CA6BV;;;;QAKAK,OAAQ,CACNT,KAAMU,KADA,CAENN,KAFM,iBAEE,CACN,MAAO,EACR,CAJK,CAlCE,CAJN,CAgDNO,MAAO,gBAAW,CAChB,GAAI,KAAKF,MAAL,EAAe,KAAKA,MAAL,CAAYG,MAAZ,CAAqB,CAAxC,CAA2C,CACzC,KAAKC,KAAL,CAAa,KAAKJ,MAAlB,CACA,KAAKN,GAAL,CAAW,KAAKM,MAAL,CAAYG,MAAZ,CAAoB,CAA/B,CACA,KAAKP,UAAL,CAAkB,IACnB,CACF,CAtDK,CAwDN;;;;MAKAS,UAAW,CACT,eAAgB,kBADP,CA7DL,CAiEN;;;;MAKAC,aAAc,uBAAW,CACvB,KAAKC,CAAL,CAAOC,MAAP,CAAcF,YAAd,EACD,CAxEK,CA0EN;;;;MAKAG,cAAe,uBAASC,CAAT,CAAW,CACxB,GAAIf,OAAQe,EAAEC,MAAF,CAAShB,KAArB,CACA,KAAKiB,IAAL,CAAU,oBAAV,CAAgC,CAACC,MAAOlB,MAAM,CAAd,CAAhC,CACD,CAlFK,CAAR,CAoFD,CArFD","file":"og-slider.js","sourcesContent":["(function() {\n  Polymer({\n\n    is: 'og-slider',\n\n    properties: {\n      /**\n      * This property set the cursor to a default position when starting\n      *\n      * @property start\n      */\n      start: { type: Number, defaultValue: 0 },\n\n      /**\n      * This property defines the max default number of the slider.\n      *\n      * @property max\n      */\n      max: { type: Number, value: 1 },\n\n      /**\n      * This property checks if the array pass has enough length to be displayed.\n      *\n      * @property renderView\n      */\n      renderView: { type: Boolean, value: false },\n\n      /**\n      * This property display a default message when the condition to show is not fufilled.\n      *\n      * @property errorMessage\n      */\n      errorMessage: { type: String, value: \"Your item is too short to display the slider.\" },\n\n      /**\n      * Data to be displayed\n      *\n      * @property ranges\n      */\n      ranges: {\n        type: Array,\n        value() {\n          return [];\n        }\n      },\n\n\n    },\n\n    ready: function() {\n      if (this.ranges && this.ranges.length > 0) {\n        this.items = this.ranges;\n        this.max = this.ranges.length -1;\n        this.renderView = true;\n      }\n    },\n\n    /**\n    * Listen to the changeslider and send it back to root to be listened\n    *\n    * @method listeners\n    */\n    listeners: {\n      'changeSlider': 'changeSliderRoot'\n    },\n\n    /**\n    * Trigger of notification from the child px-slider component\n    *\n    * @method notifyResize\n    */\n    notifyResize: function() {\n      this.$.slider.notifyResize();\n    },\n\n    /**\n    * Callback function for the listener, get the value and make it available for root component\n    *\n    * @method _changeSlider\n    */\n    _changeSlider: function(e){\n      var value = e.detail.value;\n      this.fire(\"change-slider-root\", {index: value-1});\n    },\n  });\n})();\n"]}